on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: examples-SK

jobs:
  examples-SK:
    if: "!contains(github.event.commits[0].message, '[skip-ci]')"
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: windows-latest, r: 'devel'}
          - {os: ubuntu-latest,  r: 'release'}
          - {os: ubuntu-latest,  r: 'devel'}
          #- {os: macOS-latest,   r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      GOOGLE_AUTH: ${{ secrets.GOOGLE_AUTH }}
      BRANCH_NAME: ${{ github.base_ref || github.ref_name }}
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true

    steps:

      - name: Check for Google Authorization
        if: ${{ env.GOOGLE_AUTH == '' }}
        run: exit 1

      - uses: actions/checkout@v4

      - uses: PredictiveEcology/actions/install-spatial-deps@v0.2

      - name: Install extra Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt -y install libfontconfig1-dev
        shell: bash

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true
          Ncpus: 2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
         packages: |
          any::rstudioapi
          any::testthat
          any::googledrive

      - uses: PredictiveEcology/actions/install-Require@v0.2
        with:
          GitTag: 'development'

      #- uses: PredictiveEcology/actions/install-SpaDES@v0.2

      - name: Run examples for SK
        run: |

          # Install SpaDES
          devtools::install_github("PredictiveEcology/SpaDES.core@development")
          #devtools::install_github("PredictiveEcology/SpaDES.project@development")

          # Authorize Google Drive
          googledrive::drive_auth(path = Sys.getenv("GOOGLE_AUTH"))

          # Do not restart RStudio
          options("SpaDES.project.Restart" = FALSE)

          # Clone R packages
          options("Require.cloneFrom" = Sys.getenv("R_LIBS_USER"))

          # Run examples
          exampleScripts <- list.files(file.path(getwd(), "examples"), pattern = "^SK[_-]+", full.names = TRUE)
          for (exampleScript in exampleScripts){
            cat("\nRun example:", exampleScript, "\n\n")
            source(exampleScript)
          }

        shell: Rscript {0}

