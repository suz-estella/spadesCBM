[{"path":"index.html","id":"overview","chapter":"Overview","heading":"Overview","text":"documentation work progress. Potential discrepancies omissions may exist time . find , contact us .spadesCBM modular, transparent, spatially explicit implementation logic, pools structure, equations, default assumptions Carbon Budget Model Canadian Forest Sector (CBM). applies science presented Kurz et al. (2009) similar way simulations Boisvenue et al. (2016) Boisvenue et al. (2022) calls Python functions annual processes (see libcbm_py/examples/cbm_exn). functions spadesCBM , like much modelling-based science, continuously development.collection SpaDES modules spadesCBM developed enable R&D input Canadian Forest Service (CFS) forest carbon reporting system, NFCMARS, National Forest Carbon Monitoring, Accounting, Reporting system. CFS provides science backing Canadian policies national forest issues. spadesCBM nimble tool new science, data algorithms can tested explored serve policy purposes. spadesCBM development follows PERFICT approach McIntire et al. (2022) ecological modelling systems, approach helps solve many complex issues ecological modelling, supports continuous workflows, nimble, enter operable modelling systems. SpaDES platform toolkit enables implementation PERFICT principle.","code":""},{"path":"index.html","id":"usage","chapter":"Overview","heading":"Usage","text":"Four modules need run tandem spadesCBM simulation.\nfirst module, CBM_defaults, reads defaults CBM parameters Canada. second module, CBM_dataPrep_SK, data preparation SpaDES module, input data spatial layers assembled prepared specific study area. CBM_dataPrep_SK module study-area scenario specific.\nThroughout manual use example simulation forest carbon dynamics managed forests Saskatchewan (SK) 1985-2011 similarly simulations Boisvenue et al. (2016), SK indicates study area.\nspadesCBM, CBM, growth curves (\\(m^3/ha\\)) main change-agent.\nCBM_vol2biomass_SK module translates user-provided stand-level growth curves (\\(m^3/ha\\)) increments specific ground carbon pools (metric tonnes carbon/ha) using Boudewyn et al. (2007) models (leading species specific) added smoothing algorithm fill-gap age 0 age growth curves data.\nNote CBM_vol2biomass_SK also study-area specific, Boudewyn et al. (2007) parameters dominant species ecozone specific.CBM_defaults, CBM_vol2biomass_SK one event (init), need run (note cached example). CBM_dataPrep_SK processes data init event, also second event annual disturbances processed (readDisturbanceEvents). second event enables dynamic linkages disturbance models.\nthree modules provide inputs CBM_core module, carbon-transfers pools applied specified time step (example, yearly).\nmodularity enables users access change default parameters, change inputs, connect dynamically external modules modify landscape, assess impact changes.\nworking various implementations modelling system making available community Preditive Ecology GitHub repository.\nhope others .\nsmaller study area extent simulation spadesCBM available SpaDES training manual.Figure 1: moduleDiagram spadesCBMSeveral core utilities spadesCBM provided CBMutils package, available GitHub. SpaDES platform much broader scope use spadesCBM. provide basic SpaDES definitions users can perform spadesCBM simulations without learn SpaDES capacities. CBMutils functions used example mentioned thsi manual links code /documentation. Active development CBMutils spadesCBM modules underway.","code":""},{"path":"index.html","id":"the-carbon-budget-model-in-spades","chapter":"Overview","heading":"The Carbon Budget Model in SpaDES","text":"Carbon Budget Model (CBM) first developed early 1990s (Kurz et al. (1993)). implementation platform model inter-operability nimbleness SpaDES warrants overview.spadesCBM simulates forest carbon dynamics given study area based Canadian-parameterization user-provided growth inventory information. Default Canadian parameters read-(CBM_defaults), matched user-provided information (CBM_dataPrep_SK CBM_vol2biomass_SK), information drives carbon-transfers simulations (CBM_core).","code":""},{"path":"index.html","id":"input-requirements","chapter":"Overview","heading":"Input requirements","text":"spadesCBM simulations require study area information, age, leading species stand pixel simulate landscape, growth information stand pixel. Users can provide information various formats processed CBM_dataPrep_SK CBM_vol2biomass_SK. suggest users modify example provided represent study area inventory information. module chapter lists module inputs outputs.","code":""},{"path":"index.html","id":"pools","chapter":"Overview","heading":"Pools","text":"14 internal carbon pools spadesCBM, representing stand pixel (Table 1), 5 pools take carbon system, products gas emission atmosphere. carbon transfers dictated matrices (available CBM_defaults) specify proportion carbon moving two pools (source_pool sink_pools). Matrices growth populated user-provided growth information main change agent system, providing carbon input stand. Default parameters biomass dead organic mater (DOM) turnover, decay, soil mixing either provincial/territorial, ecozone, Canada-wide scale (see Table 1 Kurz et al. (2009)). Note parameters can easily modified defaults spadesCBM simulation. Disturbances matrices representing carbon-transfers disturbances like fire harvesting, available defaults (read-via CBM_defaults) managed forests Canada.Table 1: Carbon pools spadesCBM","code":""},{"path":"index.html","id":"order-of-operations","chapter":"Overview","heading":"Order of operations","text":"simulations, disturbances occur carbon transfer. disturbances, half growth (determined increments user-provided growth curve) applied followed transfers representing DOM turnover, live biomass turnover, overmature decline compensation applicable, 2nd half growth, DOM decay, slow decay slow soil mixing. previously stated, carbon additions system come atmosphere (amount determined growth via user-provided growth curves), carbon exits system atmosphere forest products sector.Figure 2: Carbon pools transfers diagram spadesCBMTransfers proportions source pool sink pools proportions add 1, carbon lost.Table 2: Types carbon transfers spadesCBM","code":""},{"path":"index.html","id":"the-spinup-function","chapter":"Overview","heading":"The spinup function","text":"amount carbon ground forests extremely variable consequently data can provide information scales greater plot levels. compensate gap knowledge data, prior simulation, CBM_core completes process populates ground pools. process called spinup first event CBM_core module. procedure consists growing burning forest stand, according provided growth curves default values fire return intervals (provided CBM_defaults) ground carbon pool stabilize aboveground slow (soil organic layer) belowground slow (mineral soil) pools reach quasi-equilibrium state difference sum pools’ C stocks end two successive rotations ≤0.1% reach predefined number simulations. state reached, one last simulation spin-completes initialization. last simulation recent stand-replacing disturbance, defined inventory record, applied stand, model grows forest stand current age, also defined inventory record. choice fire disturbance recreate existing conditions matches historical forest disturbance forests Canada. consider procedure place holder knowledge ground carbon dynamics improves. Although likely resulting errors absolute carbon stocks (see Boisvenue et al. (2022) Appendix 4), systematic errors can least simulate trends carbon stocks fluxes. Research compared ground stocks values (Shaw (2008)) work continues improve parameters (Hararuk (2017)).","code":""},{"path":"lexicon.html","id":"lexicon","chapter":"Lexicon","heading":"Lexicon","text":"first time encountering model built within SpaDES framework, may unfamiliar several terms used manual. offer lexicon help familiarize users terms concepts relevant spadesCBM. comprehensive guide introduction robust nimble scientific workflows using SpaDES can found .","code":""},{"path":"lexicon.html","id":"basic-structure-of-a-spades-project","chapter":"Lexicon","heading":"Basic structure of a SpaDES project","text":"SpaDES projects aim follow principles PERFICT approach McIntire et al. (2022). PERFICT approach aims Predict regularly frm models Evaluated, Reusable, Freely accessible, Interoperable, part Continuous workflows Tested regularly. information approach fits within SpaDES framework can found .\nUsing modules allows us break model’s code meaningful themes /uses can easily moved, swapped replaced. SpaDES projects use modules standardized structure allow nimbleness. module defines metadata, identifying inputs outputs code, allowing R connect module others.","code":""},{"path":"lexicon.html","id":"modules","chapter":"Lexicon","heading":"Modules","text":"simplest form, SpaDES module comprised R code metadata gets put functions.","code":""},{"path":"lexicon.html","id":"metadata","chapter":"Lexicon","heading":"Metadata","text":"inputs outputs described metadata module.","code":""},{"path":"lexicon.html","id":"events","chapter":"Lexicon","heading":"Events","text":"functions module can subdivided events. events scheduled module run one many times.","code":""},{"path":"lexicon.html","id":"inputobjects","chapter":"Lexicon","heading":".inputObjects()","text":"function found end module’s script. default inputs supplied. default inputs spadesCBM, module check user supplied input, , use default described module’s .inputObjects() call.","code":""},{"path":"lexicon.html","id":"simlist","chapter":"Lexicon","heading":"Simlist","text":"Objects shared across modules unless added simlist. rich data object acts like list environment. outputs module model added simlist.","code":""},{"path":"lexicon.html","id":"prepinputs","chapter":"Lexicon","heading":"0.0.1 prepInputs()","text":"function used prepare R objects remote (usually URLs) local data sources. enables easily repeatable continuous workflows facilitates commonly used steps getting, loading, processing data. information function can used SpaDES-related projects can found .","code":""},{"path":"lexicon.html","id":"running-a-global-script","chapter":"Lexicon","heading":"Running a global script","text":"","code":""},{"path":"lexicon.html","id":"the-setupproject-function","chapter":"Lexicon","heading":"The setupProject() function","text":"setupProject() function SpaDES.project package. allows user set variety options running. run, setupProject series specific things particular order reduce chances package conflicts user errors.\nspadesCBM, use setupProject() call select modules run respective GitHub branches, project paths, caching saving options,python options download, certain project specific input objects.\nlearn SpaDES.project package setupProject() can view training chapter .","code":""},{"path":"lexicon.html","id":"the-siminitandspades2-function","chapter":"Lexicon","heading":"The simInitAndSpades2() function","text":"run setupProject() call, can run model using simInitAndSpades2(). One outputs function simlist, allowing user view outputs simulation.","code":""},{"path":"lexicon.html","id":"folder-structure-of-a-spades-module","chapter":"Lexicon","heading":"Folder structure of a SpaDES module","text":"spadesCBM modules use basic folder structure SpaDES modules. respective .R scripts, .Rmd file documentation used manual, tests folder containing module’s tests. also R folder containing scripts get sourced running module. can include basic functions used module creation default objects used user doesn’t provide specific input.","code":""},{"path":"lexicon.html","id":"spadescbm-and-carbon-terms","chapter":"Lexicon","heading":"spadesCBM and carbon terms","text":"","code":""},{"path":"lexicon.html","id":"cbm-cfs3-vs-spadescbm","chapter":"Lexicon","heading":"0.0.2 CBM-CFS3 vs spadesCBM","text":"Carbon Budget Model Canadian Forest Sector CBM-CFS3 windows-based framework currently used international reporting Canada’s managed forests. aspatial windows-based. spadesCBM SpaDES implementation logic, structure, defaults assumptions Carbon Budget Model CBM. spatially explicit built R calls Python functions.","code":""},{"path":"lexicon.html","id":"spinup","chapter":"Lexicon","heading":"0.0.3 Spinup","text":"-depth explanation spinup function can found (incomplete).","code":""},{"path":"lexicon.html","id":"ecozone-vs-spatial-unit","chapter":"Lexicon","heading":"0.0.4 Ecozone vs spatial unit","text":"Canada, 15 distinct terrestrial ecozones. spadesCBM uses classification. represent large ecosystems specific climate vegetation, regardless jurisdiction.\nSpatial units specific ecozones, correspond unique combination jurisdiction (.e. province territory) ecozone.","code":""},{"path":"lexicon.html","id":"cohort-groups","chapter":"Lexicon","heading":"0.0.5 Cohort groups","text":"simplify optimize simulations, group individual pixels cohortGroupID group corresponds unique set age, growth curve, spatial unit, ecozone.\n-depth description cohort groups spadesCBM can found .","code":""},{"path":"lexicon.html","id":"source_pool-and-sink_pool","chapter":"Lexicon","heading":"0.0.6 source_pool and sink_pool","text":"Every carbon transfer spadesCBM occurs two pools. One pool source transfers carbon sink. specific pool generally tied one can source one carbon transfer sink another. spadesCBM, calculated proportions, proportion one pool moving another pool, proportions adding 1 carbon lost.","code":""},{"path":"lexicon.html","id":"masterraster","chapter":"Lexicon","heading":"0.0.7 masterRaster","text":"spadesCBM, study area defined masterRaster object. object can directly provided raster, created shapefile, means. example, provided raster file global script. Refer Example chapter view masterRaster provided example.","code":""},{"path":"lexicon.html","id":"cbmadmin","chapter":"Lexicon","heading":"0.0.8 cbmAdmin","text":"data table provides ecozone spatial unit information provincial boundaries. provided help users equivalence provincial territorial boundaries, ecozones, spatial unit IDs.","code":""},{"path":"lexicon.html","id":"net-primary-productivity-npp","chapter":"Lexicon","heading":"0.0.9 Net Primary Productivity (NPP)","text":"NPP defined amount CO2 removed atmosphere absorbed forest maintain .","code":""},{"path":"lexicon.html","id":"cbmpools","chapter":"Lexicon","heading":"0.0.10 cbmPools","text":"table output spadesCBM. provides carbon MgC cohort groups pools simulation year (prescribed simulations long).","code":""},{"path":"lexicon.html","id":"dead-organic-matter","chapter":"Lexicon","heading":"0.0.11 Dead Organic Matter","text":"spadesCBM models carbon live component forest (.e. trees) dead organic matter (DOM). DOM carbon pools spadesCBM include snag pools (include dead stems, bark, branches, stumps) organic soil carbon pools.","code":""},{"path":"cbm_defaults.html","id":"cbm_defaults","chapter":"1 CBM_defaults","heading":"1 CBM_defaults","text":"documentation work progress. Potential discrepancies omissions may exist time . find regarding module, contact us .","code":""},{"path":"cbm_defaults.html","id":"overview-1","chapter":"1 CBM_defaults","heading":"1.1 Overview","text":"CBM_defaults reads default parameters managed forest Canada. SpaDES-speak, one event (init). , module provides R-based access defaults CBM parameters managed forests Canada (run Usage section run module independently). part spadesCBM, provides simulations default parameter values managed forests Canada, akin Archive Index CBM-CFS3 documentation. parameters read SQLite database (link ), defaults, modified CBM-CFS3 accommodate flexible representation vegetation dynamics enable libcbm Python functions used, available . Defaults managed forests Canada include disturbance data different disturbance types IDs, spinup parameters, pool names, fire return intervals ecozone . outputs module used CBM_dataPrep_SK CBM_core spadesCBM simulations.","code":""},{"path":"cbm_defaults.html","id":"background","chapter":"1 CBM_defaults","heading":"1.2 Background","text":"example uses default parameters created use CBM-CFS3 described Kurz et al. (2009). parameters source references. ones outline Operational-scale Carbon Budget Model Canadian Forest Sector (CBM-CFS3) version 1.2: user’s guide. CBM_defaults brings parameters R-environment, easy user-access modifications.","code":""},{"path":"cbm_defaults.html","id":"inputs","chapter":"1 CBM_defaults","heading":"1.3 Inputs","text":"","code":""},{"path":"cbm_defaults.html","id":"module-functioning","chapter":"1 CBM_defaults","heading":"1.4 Module functioning","text":"SQLite database, selection cbm_exn resource files downloaded stored user’s Inputs folder GitHub using reproducible::prepInputs function, useful tool SpaDES toolkit.Parameters necessary spadesCBM simulations extracted downloaded files. saved objects simList (see list output objects ).disturbanceMatrix cTransfers objects help identify carbon transfers matches provided disturbances matches transfer matrix IDs proportions transferred disturbance names.Parameters necessary spinup event CBM_core modules assembled spinupSQL object.pooldef gives names carbon pool exists CBM.species.csv read CBMspecies object.cbmAdmin identifies ecozones spatial unit IDs combinations possible province territory.","code":""},{"path":"cbm_defaults.html","id":"outputs","chapter":"1 CBM_defaults","heading":"1.5 Outputs","text":"","code":""},{"path":"cbm_defaults.html","id":"usage-1","chapter":"1 CBM_defaults","heading":"1.6 Usage","text":"module can run independently running global script . Run independently, provides transparent access default parameters managed forests Canada spadesCBM simulations.","code":"\n# project path and package install\nprojectPath <- \"~/CBM_defaults\"\nrepos <- c(\"predictiveecology.r-universe.dev\", getOption(\"repos\"))\nif ((packageVersion(\"SpaDES.project\") < \"0.1.1\" || packageVersion(\"Require\") < \"1.0.1.9002\") |>\n    tryCatch(error = function(x) TRUE))\n  install.packages(c(\"SpaDES.project\", \"Require\"), repos = repos)\n\n# setup\nout <- SpaDES.project::setupProject(\n  paths = list(projectPath = projectPath),\n  \n  options = options(\n    repos = c(repos = repos),\n    reproducible.destinationPath = \"inputs\"\n  ),\n  modules =  c(\"PredictiveEcology/CBM_defaults@main\"),\n  require = c(\"SpaDES.core\"),\n)\n\n# run\noutDefaults <- SpaDES.core::simInitAndSpades2(out)"},{"path":"cbm_defaults.html","id":"links-to-other-modules","chapter":"1 CBM_defaults","heading":"1.7 Links to other modules","text":"CBM_dataPrep_SKCBM_vol2biomass_SKCBM_core","code":""},{"path":"cbm_dataprep_sk.html","id":"cbm_dataprep_sk","chapter":"2 CBM_dataPrep_SK","heading":"2 CBM_dataPrep_SK","text":"documentation work progress. Potential discrepancies omissions may exist time . find , please contact us .","code":""},{"path":"cbm_dataprep_sk.html","id":"overview-2","chapter":"2 CBM_dataPrep_SK","heading":"2.1 Overview","text":"CBM_dataPrep_SK processes spatially explicit inputs use CBM_vol2biomass_SK CBM_core. SpaDES-speak, two events, init event (scheduled ) readDisturbanceEvents processes disturbances (usually provided rasters) table format used CBM_core. SpaDES designed spatially explicit modelling provides wide variety tools support . CBM_dataPrep_SK makes use tools. location specific spatial information processed module. module’s inputs study area scenario specific making CBM_dataPrep_SK idiosyncratic module spadesCBM deck, meaning module require users adapt available information study area. use example simulates scenario remotely-sensed disturbances simulated managed forests Saskatchewan 1985 2011, described Boisvenue et al. (2016) (scenario = time horizon + disturbances). suggest users wanting run spadesCBM study-area modify module, adapting inputs produce outputs CBM_dataPrep_SK. module become CBM_dataPrep_NewStudyArea.","code":""},{"path":"cbm_dataprep_sk.html","id":"background-1","chapter":"2 CBM_dataPrep_SK","heading":"2.2 Background","text":"default structure SpaDES modules .inputObjects function, function CBM_dataPrep_SK, make use reproducible::prepInputs function, important part SpaDES toolkit (see SpaDES training manual details), enabling repeatable continuous workflows. CBM_dataPrep_SK falls back defaults CBM parameters running SK managed forests, unless alternative information provided user.example study area defined object masterRaster. example, raster provided directly, note R-code can replace current input processing examples CBM_dataPrep_SK. characteristics (projection, resolution, etc.) masterRaster transferred rasters used simulation via function reproducible::prepInputs. example, rasters age (ageRaster), growth curves location (gcIndexRaster), ecozone (ecoRaster) spatial unit (spuRaster), link back default parameters Canada. Yearly (time step example - run times(simMngedSK) see current, start, end time) disturbance rasters provide type location disturbances. rasters matched masterRaster using reproducible::prepInputs function. Default parameters expected CBM_defaults (spinupSQL, species_tr) one table provided cbmAdmin user convenience. addition location (study area masterRaster) inventory information (age, provided raster), user expected provide: growth curves (\\(m^3/ha\\)) linked pixel stand (userGcM3), leading species curve (gcMeta), information disturbances (userDist).","code":""},{"path":"cbm_dataprep_sk.html","id":"inputs-1","chapter":"2 CBM_dataPrep_SK","heading":"2.3 Inputs","text":"","code":""},{"path":"cbm_dataprep_sk.html","id":"module-functioning-1","chapter":"2 CBM_dataPrep_SK","heading":"2.4 Module functioning","text":"CBM_dataPrep_SK 2 events; init event, run , readDisturbanceEvents event, repeated simulation year.","code":""},{"path":"cbm_dataprep_sk.html","id":"init","chapter":"2 CBM_dataPrep_SK","heading":"2.4.1 init","text":"first event performs majority data processing steps module. study area’s various spatial data also processed table format use CBM_core CBM_vol2biomass_SK modules. event run .","code":""},{"path":"cbm_dataprep_sk.html","id":"readdisturbanceevents","chapter":"2 CBM_dataPrep_SK","heading":"2.4.2 readDisturbanceEvents","text":"short event serves process disturbance events simulation year. Separating processing init event enables dynamic linkages disturbance models. However, example, disturbances provided form remotely-sensed disturbance rasters.","code":""},{"path":"cbm_dataprep_sk.html","id":"disturbances","chapter":"2 CBM_dataPrep_SK","heading":"2.4.3 Disturbances","text":"user identifies disturbances occur landscape simulations. example points file disturbance name description, userDist. table also provides raster values differentiates disturbance types (example, provide one raster per year, disturbances year, unique raster value, opposed one individual raster per year per disturbance type), identifies disturbance whole stand disturbance . disturbances need match disturbance matrix, identifies proportion carbon transferred one pool (source_pool) another pool (sink_pool) disturbance occurs pixel. one match (e.g., one type fire), user prompted select list disturbance matrices available study area, spatial unit ecozone combinations. default matrices provided Canada-wide defaults region (spatial unit ecozone) specific. read-CBM_defaults available CBM_dataPrep_SK module via simList(). provide example selection example. user-prompts look like :\n468 unique disturbance matrices identified defaults. Since root parameters snag carbon transfer rates hardwood softwood specific rates, disturbance hardwood softwood instance, means 234 unique disturbances across Canada defaults modelling system, one hardwood one softwood. user add modify proportions transferred pools represent disturbance (NOTE HAPPEN CSVs, even work? libcbm point files? change ? QUESTION SCOTT, VINI SUSAN).\nAdd section one modify disturbance matricesFigure 1: Proportional carbon transfers pools fire SaskatchewanThere series helper functions CBMutils help users explore navigate disturbance matrices:\n- spuDist extracting disturbances specific spatial unit,\n- simDist() lists disturbances used simulation, \n- seeDist() pulls proportions source sink pools.growth curves can identified strata, multiple columns can used identify growth curves using curveID object. example, gcids used.","code":""},{"path":"cbm_dataprep_sk.html","id":"outputs-1","chapter":"2 CBM_dataPrep_SK","heading":"2.5 Outputs","text":"","code":""},{"path":"cbm_dataprep_sk.html","id":"links-to-other-modules-1","chapter":"2 CBM_dataPrep_SK","heading":"2.6 Links to other modules","text":"CBM_defaultsCBM_vol2biomass_SKCBM_core","code":""},{"path":"cbm_vol2biomass_sk.html","id":"cbm_vol2biomass_sk","chapter":"3 CBM_vol2biomass_SK","heading":"3 CBM_vol2biomass_SK","text":"documentation work progress. Potential discrepancies omissions may exist time . find , please contact us .","code":""},{"path":"cbm_vol2biomass_sk.html","id":"overview-3","chapter":"3 CBM_vol2biomass_SK","heading":"3.1 Overview","text":"main change agent CBM forest growth. model needs increments carbon three ground carbon pools, Merch stem wood carbon merchantable-sized trees, Foliage foliage-carbon, combines bark, branches stem wood carbon live, nonmerchantable-sized trees. module translates stand-level volume \\(m^3/ha\\) values user provides tonnes carbon/ha increments CBM_core needs simulate annual carbon fluxes estimate stocks spadesCBM simulations. implementation Boudewyn et al. (2007) stand-level volume biomass translation. CBM implementation use equations, added smoothing algorithm fill-gap age 0 age growth curves data. SpaDES-speak, module just one event. needs run simulations.Like many statistical models, translation always successful. user advised review resulting biomass increments representation vegetation dynamics CBM spadesCBMThis module can run independently spadesCBM deck. relies multiple CBMutils functions. describe functions relate Boudewyn et al. (2007) equations, also describe smoothing algorithm .","code":""},{"path":"cbm_vol2biomass_sk.html","id":"background-2","chapter":"3 CBM_vol2biomass_SK","heading":"3.2 Background","text":"module uses subset Boudewyn et al. (2007) empirical models calculate volume--biomass conversion models forested (treed) land. developed plot data supplied forest inventory agencies throughout Canada. Figure 1 (Figure 3 Boudewyn et al. (2007)) outline model development procedure (upper) calculation workflow (lower). matched calculation functions Boudewyn et al. (2007) calculation workflow.Figure 1: Figure 3 Boudewyn et al. (2007) ","code":""},{"path":"cbm_vol2biomass_sk.html","id":"inputs-2","chapter":"3 CBM_vol2biomass_SK","heading":"3.3 Inputs","text":"pieces information needed apply Boudewyn et al. (2007) conversion models growth curves, leading species growth curve, landscape (pixel) growth curve applies . user provides stand-level \\(m^3/ha\\) via userGCM3. module, gcMeta links growth curve leading species,\nobjects spatialDT provides location information. table lists inputs module. Inputs table3 table7 Boudewyn et al. (2007) parameters hosted National Forest Information System website. provide cbmAdmin object help user equivalence provincial territorial boudaries, Canadian ecozones (defined shapefile use model ), spatialUnit","code":""},{"path":"cbm_vol2biomass_sk.html","id":"module-functioning-2","chapter":"3 CBM_vol2biomass_SK","heading":"3.4 Module functioning","text":"module begins reading-provided growth curves, matches correct Boudewyn et al. (2007) parameters (table3 table7) location curve, makes sure appropriate metadata available apply parameters growth curve processes curve. outputs visuals growth curves, translations curves, final curves gone smoothing process needed. Plots cumulative curve pool (totMerch, fol, ) raw translation smoothed curves saved outputs folder SpaDES project. main output growth_increments, matrix yearly carbon increments passed along CBM_core module.","code":""},{"path":"cbm_vol2biomass_sk.html","id":"input-check","chapter":"3 CBM_vol2biomass_SK","heading":"3.4.1 Input check","text":"module starts checking provided growth curves (user-provided via userGcM3) annual time steps. , interpolated values provided steps added. Growth curves saved ggplot object simulation list (sim$...) visual inspection (volCurves) anytime post simulation.","code":""},{"path":"cbm_vol2biomass_sk.html","id":"choosing-parameters","chapter":"3 CBM_vol2biomass_SK","heading":"3.4.2 Choosing parameters","text":"Boudewyn et al. (2007) models developed locations managed forests Canada. developed, enough data available, ecozone stand-level leading species. ecozone species combinations enough data model development, user find alternatives. chose replace models converge models similar species similar ecozone example. ecozones tables 3 7 (table3, table4, table5, table6 table7):ones :table5 NFIS website, 5/13 possible jurisdiction id (juris_id column). provinces available: AB BC NB NL NT. provinces nothave match, chose following equivalence example:","code":""},{"path":"cbm_vol2biomass_sk.html","id":"from-m3-to-carbon","chapter":"3 CBM_vol2biomass_SK","heading":"3.4.3 From \\(m^3\\) to carbon","text":"growth curve processed species, one time. requires match species specified Boudewyn et al. (2007) leading species associated curve provided user. provide means complete match full-stops match. Growth curves often developed strata multiple characteristics. simulation list object curveID permits user identify multiple columns define growth curves. example, column gcids used identify unique growth curves.required information assembled study area, process information species, Boudewyn et al. (2007) parameters leading species-specific (CBMutils::cumPoolsCreate()), species, processes growth curve one time (using CBMutils::convertM3biom()). Values merchantable volume age (boudewyn?) parameters available NFIS, used Equation 1 (matches Eq. 1 Figure 1) get b_m, total stem wood biomass merchantable-sized live trees (biomass includes stumps tops), metric tonnes per ha (CBMutils::b_m() used CBMutils::convertM3biom()).Equation 1.\\(b_m = * volume^b\\):\\(volume\\) = gross merchantable volume/ha (net B.C.) live trees (volume include stumps, tops, trees < merchantable DBH), m3/ha.\\(volume\\) = gross merchantable volume/ha (net B.C.) live trees (volume include stumps, tops, trees < merchantable DBH), m3/ha.\\(\\), \\(b\\) = non-linear model parameters fit separately jurisdiction, ecozone, lead tree species (Table 3 Boudewyn et al. (2007)).\\(\\), \\(b\\) = non-linear model parameters fit separately jurisdiction, ecozone, lead tree species (Table 3 Boudewyn et al. (2007)).stem wood content smaller trees tonnes/ha (\\(b_n\\)) calculated via Equation 2 (CBMutils::nmfac() used CBMutils::convertM3biom() matches Eq. 2 Figure 1).Equation 2.\\(nonmerchfactor = k + * b_m^b\\):\\(nonmerchfactor = b_{nm}/b_m\\)\\(nonmerchfactor = b_{nm}/b_m\\)\\(b_{nm} = b_m + b_n\\)\\(b_{nm} = b_m + b_n\\)\\(k\\), \\(\\), \\(b\\) model parameters fit separately jurisdiction, ecozone, lead tree species (Table 4 Boudewyn et al. (2007)).\\(k\\), \\(\\), \\(b\\) model parameters fit separately jurisdiction, ecozone, lead tree species (Table 4 Boudewyn et al. (2007)).stem wood biomass live, sapling-sized trees tonnes/ha (\\(b_s\\)) extracted Equation 3 (CBMutils::sapfac() used CBMutils::convertM3biom() matches Eq. 3 Figure 1).Equation 3.\\(saplingfactor = k + * b_m^b\\):\\(saplingfactor = b_{snm}/b_{nm}\\)\\(saplingfactor = b_{snm}/b_{nm}\\)\\(b_snm = b_nm + b_s\\)\\(b_snm = b_nm + b_s\\)\\(k\\), \\(\\), \\(b\\) model parameters fit separately jurisdiction, ecozone, lead tree species (Table 5 Boudewyn et al. (2007)). Note sparse data resulted incomplete coverage managed forests Canada. Module users decide parameter selection appropriate study area, CBM_vol2biomass_SK example.\\(k\\), \\(\\), \\(b\\) model parameters fit separately jurisdiction, ecozone, lead tree species (Table 5 Boudewyn et al. (2007)). Note sparse data resulted incomplete coverage managed forests Canada. Module users decide parameter selection appropriate study area, CBM_vol2biomass_SK example.Proportions total tree biomass stem wood, stem bark, branches foliage live trees sizes calculated Equations 4, 5, 6, 7 respectively (CBMutils::biomProp() returns vector proportion matches Eq. 4, 5, 6 7 Figure 1 used CBMutils::convertM3biom()).Equation 4.\\(P_{(stemwood)} = 1/(1 + e^{(a1+a2*vol+a3*lvol)} + e^{(b1+b2*vol+b3*lvol)} + e^{(c1+c2*vol+c3*lvol)} )\\)Equation 5.\\(P_{(bark)} = 1/(1 + e^{(a1+a2*vol+a3*lvol)} + e^{(b1+b2*vol+b3*lvol)} + e^{(c1+c2*vol+c3*lvol)} )\\)Equation 6.\\(P_{(branches)} = 1/(1 + e^{(a1+a2*vol+a3*lvol)} + e^{(b1+b2*vol+b3*lvol)} + e^{(c1+c2*vol+c3*lvol)} )\\)Equation 7.\\(P_{(foliage)} = 1/(1 + e^{(a1+a2*vol+a3*lvol)} + e^{(b1+b2*vol+b3*lvol)} + e^{(c1+c2*vol+c3*lvol)} )\\):\\(vol\\) gross merchantable volume per ha (provided user)\\(vol\\) gross merchantable volume per ha (provided user)\\(lvol\\) natural logarithm (\\(vol\\) + 5)\\(lvol\\) natural logarithm (\\(vol\\) + 5)\\(a1, a2, a3, b1, b2, b3, c1, c2, c3\\) model parameters fit separately jurisdiction, ecozone lead tree species (Table 6 Boudewyn et al. (2007)).\\(a1, a2, a3, b1, b2, b3, c1, c2, c3\\) model parameters fit separately jurisdiction, ecozone lead tree species (Table 6 Boudewyn et al. (2007)).CBMutils::biomProp() function also implements caps proportion models (Table 7 Boudewyn et al. (2007)). Tonnes biomass per hectare converted tonnes carbon per hectare CBMutils::cumPoolsCreate() functions (currently constant 0.5 tonnes carbon per tonnes biomass users can modify value).","code":""},{"path":"cbm_vol2biomass_sk.html","id":"smoothing-algorithm","chapter":"3 CBM_vol2biomass_SK","heading":"3.4.4 Smoothing algorithm","text":"Forest management based forest inventory data. developed calculate forest growth purposes sustainable production forests products (\\(m^3/ha\\)). Tree diameters measured purposes, consequence, trees start getting measured reached minimum diameter (varies per jurisdiction). leaves gap age 0 stand age trees reach specified diameter. fill gap use smoothing algorithm based Chapman_Richards function (Gove (2019)). apply smoothing cumulative curves three pools (totMerch, fol, ).module automatically plots direct translation (smoothing totMerch, fol, )) smoothed (totMerch_New, fol_New, other_New) curves three pools. figures save SpaDES project folder outputs/CBM_vol2biomass_figures/cumPools_smoothed_postChapmanRichards.png. CBMutils::cumPoolsSmooth function implements smoothing procedure.","code":""},{"path":"cbm_vol2biomass_sk.html","id":"outputs-2","chapter":"3 CBM_vol2biomass_SK","heading":"3.5 Outputs","text":"","code":""},{"path":"cbm_vol2biomass_sk.html","id":"usage-2","chapter":"3 CBM_vol2biomass_SK","heading":"3.6 Usage","text":"module can run independently. global script runs module managed forests Saskatchewan. Inputs adapted user run elsewhere.","code":"#project path and package install\nprojectPath <- \"~/CBM_vol2biomass_SK\"\nrepos <- unique(c(\"predictiveecology.r-universe.dev\", getOption(\"repos\")))\ninstall.packages(\"SpaDES.project\",\n                 repos = repos)\n\n#setup\nout <- SpaDES.project::setupProject(\n  paths = list(projectPath = projectPath),\n  overwrite = TRUE,\n  \n  options = options(\n    repos = c(repos = repos),\n    reproducible.destinationPath = \"inputs\"\n  ),\n  modules =  c(\"PredictiveEcology/CBM_vol2biomass_SK@development\"),\n  require = c(\"SpaDES.core\"),\n  \n  \n  ######### inputs #########\n  \n  spatialDT = data.table(\n    gcids = c(55, 49, 52, 58, 28, 37, 34, 31, 40, 61, 50, 35, 29, 56, 62),\n    spatial_unit_id = c(28, 28, 28, 28, 27, 27, 27, 27, 27, 28, 28, 27, 27, 28, 28),\n    ecozones = c(9, 9, 9, 9, 6, 6, 6, 6, 6, 9, 9, 6, 6, 9, 9)),\n\n#run\nsimBiomass <- simInitAndSpades2(out)"},{"path":"cbm_vol2biomass_sk.html","id":"links-to-other-modules-2","chapter":"3 CBM_vol2biomass_SK","heading":"3.7 Links to other modules","text":"CBM_defaultsCBM_dataPrep_SKCBM_core","code":""},{"path":"cbm_core.html","id":"cbm_core","chapter":"4 CBM_core","heading":"4 CBM_core","text":"documentation work progress. Potential discrepancies omissions may exist time . find , please contact us .","code":""},{"path":"cbm_core.html","id":"overview-4","chapter":"4 CBM_core","heading":"4.1 Overview","text":"CBM_core central module spadesCBM. carbon transfers calculated every time step, disturbances applied, stocks tracked. run needs parameters either CBM_defaults, CBM_dataPrep_SK, CBM_vol2biomass_SK (per provided example managed forests Saskatchewan) equivalent information user. SpaDES-speak, module five events (Init, spinup, annual, accumulateResults, plot). two events carbon transactions occur: spinup annual. events tools enable transactions. events scheduled except annual event, schedules end simulation horizon. module Python functions libcbm package called. functions used module libcbm cbm-exn functions exclusively, designed accept external biomass increments. Python functions used spinup annual events .","code":""},{"path":"cbm_core.html","id":"background-3","chapter":"4 CBM_core","heading":"4.2 Background","text":"CBM_core, approach described Overview section applied. Parameters easily accessible via normal R-functions, SpaDES toolkit enables modular, repeatable continuous workflow. brings transparency flexibility needed scientists modify, evaluate test new inputs, new data, new algorithms permitting non-researcher users also use system.","code":""},{"path":"cbm_core.html","id":"inputs-3","chapter":"4 CBM_core","heading":"4.3 Inputs","text":"","code":""},{"path":"cbm_core.html","id":"module-functioning-3","chapter":"4 CBM_core","heading":"4.4 Module functioning","text":"","code":""},{"path":"cbm_core.html","id":"events-1","chapter":"4 CBM_core","heading":"4.4.1 Events","text":"5 events CBM_core. run , except annual event, repeated simulation year.","code":""},{"path":"cbm_core.html","id":"init-1","chapter":"4 CBM_core","heading":"4.4.1.1 Init","text":"short event, Python virtual environment set . suitable version python available, installed using reticulate package.","code":""},{"path":"cbm_core.html","id":"spinup-1","chapter":"4 CBM_core","heading":"4.4.1.2 spinup","text":"main goal event initialize landscape performing spinup function.Cohort stand data prepared passed cbmExnSpinup function alongside growth curve data (CBM_vol2biomass_SK) spinup default data (CBM_defaults). cbmExnSpinup function sets inputs, calls cbm_exn_get_default_parameters python function defines model structure, runs carbon transfers necessary growth burn cycle using cbm_exn_spinup.spinup output data cohort groups prepared use annual event.","code":""},{"path":"cbm_core.html","id":"annual","chapter":"4 CBM_core","heading":"4.4.1.3 annual","text":"event carbon transfers applied simulation year. Disturbances matched correct records, transfers listed applied. Details transfer rates found following section, . undisturbed cohorts continue grow one time step according associated growth curve, disturbed cohorts begin growing delay period. delay dictated default_delay_regen parameter CBM_core module, can changed user. growth-related carbon transfers affected delay. default set 0 years.","code":""},{"path":"cbm_core.html","id":"accumulateresults","chapter":"4 CBM_core","heading":"4.4.1.4 accumulateResults","text":"event outputs saved. case example Saskatchewan, output save cbmPools Net Primary Production (NPP) simulation year. paths kept default running global script, outputs found : ~/GitHub/spadesCBM/outputs.","code":""},{"path":"cbm_core.html","id":"plot","chapter":"4 CBM_core","heading":"4.4.1.5 plot","text":"final event plotting occurs. Plots saved .png files project’s outputs folder. Similar accumulateResults, paths kept default running example global script, outputs found :\n~/GitHub/spadesCBM/outputs. can also view examples plots .","code":""},{"path":"cbm_core.html","id":"stands-and-cohort-groups","chapter":"4 CBM_core","heading":"4.4.2 Stands and Cohort Groups","text":"Cohort groups unique combinations age, growth curve (equates species one growth curve per leading species CBM), spatial unit ecozone. spadesCBM, forested pixels simulated represent stand. stand (pixel) can one many cohorts. cohorts across stands share identical age, growth curve, spatial unit, ecozone share one unique cohortGroupID number.object allPixDT large table row corresponding every pixel masterRaster. cohortDT object long-form table simulated pixel (stand) row (NAs), cohortGroups lists cohort groups attributes. example 1 347 529 pixels simulated (.e., 1 347 529 rows cohortDT) grouped 739 cohortGroups processing (.e. 739 rows cohortGroups).","code":""},{"path":"cbm_core.html","id":"carbon-transfers","chapter":"4 CBM_core","heading":"4.4.3 Carbon Transfers","text":"Default parameters simulations available mainly default .csv files pieces information mean_annual_temperature used decay rates calculations, return_interval, min_rotations max_rotations used spinup initialization process available SQLight database. 18 internal carbon pools spadesCBM (see Table 1 Overview), two pools take carbon system, one atmosphere one harvested wood exiting system. Disturbances first carbon transfer applied record. Half annual increment added (transfer atmosphere three ground biomass pools - Merch, Foliage, ). Disturbance inputs processed externally CBM_core. example disturbances processed CBM_dataPrep_SK, leaving CBM_core free spatial data manipulations. Disturbance matrices specify proportion carbon pool transferred pools taken system (via forest products (pool named Products) back atmosphere). Figure 1 gives example transfers fire Saskatchewan.Figure 1: Proportional carbon transfers pools fire SaskatchewanThe amount carbon transferred atmosphere ground biomass pools determined growth curves, translated \\(m^3/ha\\) carbon increments CBM_vol2biomass_SK provided CBM_core carbon increments (tonnes carbon/ha). example object simMngedSK$growth_increments increments used simulation. Dead Organic Matter (DOM) turnover happens next transfers carbon pools representing snags (StemSnags BranchSnags), MediumSoil, AboveGroundFastSoil pools. Biomass turnover follows transfers Merch, Foliage, , FineRoots CoarseRoots, pools representing snags (StemSnags BranchSnags), AboveGroundVeryFastSoil, BelowGroundFastSoil, AboveGroundVeryFastSoil BelowGroundVeryFastSoil pools. Carbon never lost system, increments times negative. accommodate negative increment values, carbon transfer labelled overmature_decline, moves carbon Merch, , Foliage, CoarseRoots FineRoots pools representing stem branch snags, AboveGroundFastSoil, AboveGroundVeryFastSoil, BelowGroundFastSoil, BelowGroundVeryFastSoil pools. transfers portioned way annual turnover amount equal loss individual biomass pool according negative increment. Following overmature_decline transfers, second half growth added three ground biomass pools - Merch, Foliage, . Next, transfers due decay performed. Applied decay rates (\\(a_k\\)) calculated DOM pool(\\(_k\\)) per Equation 1 (see Kurz et al. (2009)).Equation 1.\n\\(a_k = D_k * TempMod * StandMod\\):\\(D_k\\) base decay rate (yr−1) reference mean annual temperature (\\(RefTemp\\)).\\(TempMod\\) temperature modifier, per Equation 2, \\(StandMod\\) stand modifier per Equation 3 (Kurz & App (1999)).Equation 2,TempMod = \\(e^{((MAT_i -RefTemp) * ln(Q_{10}) * 0.1)}\\):\\(MAT_i\\) mean annual temperature spatial analysis unit.\\(RefTemp\\) reference mean annual temperature.\\(Q_{10}\\) temperature coefficient.Equation 3.\\(StandMod =  1+(max_r - 1) * e^{(-b * TotBio/MaxBio)}\\):\\(max_r\\) open canopy decay rate multiplier (default value 1).\\(TotBio\\) total aboveground biomass, \\(MaxBio\\) maximum aboveground biomass specified stand type, \\(b\\) reduction factor calculated 10% maximum biomass, decomposition rates reduce 50% (set 6.93 see Kurz & App (1999)).default values base decay rate (\\(D_k\\)), \\(RefTemp\\), \\(Q_10\\) \\(max_r\\) spadesCBM simulations found .final carbon transfers represents physical transfer rate - belowground slow pool set 0.006 yr−1 (slowmixing) based transfer rate dissolved organic C reported literature Canadian forest soils (Moore (2003)).amount carbon CoarseRoots FineRoots pools depends carbon three ground pools absorb carbon atmosphere, Merch, , Foliage. total root biomass estimated using empirical equations, one set equations hardwood (Equation 4, 6, 7, 9) one softwood species (Equation 5, 6, 8, 10) (Kurz et al. (2009), Li (2003)).Equation 4.\\(T_{hw} = hw_a * ((Merch_{hw} + Foliage_{hw} + Other_{hw}) * 2)^{hw_b}\\)Equation 5.\\(T_{sw} = sw_a * ((Merch_{sw} + Foliage_{sw} + Other_{sw}) * 2)\\)Equation 6.\\(P_{fine} = frp_a + frp_b * e^{((-1/frp_c)*(T_{hw} + T_{sw}))}\\)Equation 7.\\(FineRoots_{hw} = T_{hw} * P_{fine}\\)Equation 8.\\(FineRoots_{sw} = T_{sw} * P_{fine}\\)Equation 9.\\(CoarseRoots_{hw} = T_{hw} * (1-P_{fine})\\)Equation 10.\\(CoarseRoots_{sw} = T_{sw} * (1-P_{fine})\\)-going work improve CBM targeting DOM related parameters. Hararuk (2017) used data assimilation methods brought improvements turnover rates FineRoots pool, change CoarseRoots pool. allocation carbon ground biomass (Merch, Foliage, ) roots (FineRoots, CoarseRoots) implemented CBM dates model development (Kurz et al. (2009), Li (2003)). methods estimating ground biomass ground implement estimate carbon elsewhere (example Harris (2021)), user justified wanting explore effects changing parameters (Błońska (2022)). R-based environment implementation improvement CBM, user free change parameters provided cbm_exn_spinup() cbm_exn_step() Python functions.","code":""},{"path":"cbm_core.html","id":"outputs-3","chapter":"4 CBM_core","heading":"4.5 Outputs","text":"CBM_core provides outputs prescribed global script, script controls simulations. make use function SpaDES.project::setupProject. possible develop SpaDES project using different methods familiar user, SpaDES.project package streamlines process, facilitating clean, reproducible reusable project setup project. example, specify globalSK.R script want NPP cbmPools saved every year (lines 54-56). user specify outputs pools (see Table 1 Overview). user can also chose outputs like see objects simList. example, user interest quantity (tonnes carbon) forest products emissions existing system. simList named simMngedSK (line 61 global script globalSK.R), object interest simMngedSK$emissionsProducts.Note CBM, like CBM-CFS3, simulate photosynthesis autotrophic respiration. Therefore, NPP calculated sum net growth (.e., growth results positive increment) growth replaces material lost biomass turnover year. young, actively growing stands, large proportion NPP results positive growth increment older, mature stands, larger proportion NPP allocated replacement material lost turnover.","code":""},{"path":"cbm_core.html","id":"links-to-other-modules-3","chapter":"4 CBM_core","heading":"4.6 Links to other modules","text":"CBM_defaultsCBM_dataPrep_SKCBM_vol2biomass_SK","code":""},{"path":"example-spadescbm-in-saskatchewan.html","id":"example-spadescbm-in-saskatchewan","chapter":"Example: spadesCBM in Saskatchewan","heading":"Example: spadesCBM in Saskatchewan","text":"provide example script run managed forests Saskatchewan 1985 2011. example fairly lightweight computers able run simulation.example, setup workflow using \nSpaDES.project package \ncurrent versions spadesCBM modules.","code":""},{"path":"example-spadescbm-in-saskatchewan.html","id":"setup","chapter":"Example: spadesCBM in Saskatchewan","heading":"Setup","text":"things need set first time running spadesCBM. global script take care guide , things note initial set .","code":""},{"path":"example-spadescbm-in-saskatchewan.html","id":"google-account","chapter":"Example: spadesCBM in Saskatchewan","heading":"Google account","text":"run provided example, users need access data using googledrive R package (part tidyverse family R packages).\nsimInit() (simInitAndSpades) call, function initialize (initialize run) SpaDES-based simulations, R prompt either choose previously authenticated account (previously used googledrive) open browser window authenticate.Make sure give tidyverse read/write access files:","code":""},{"path":"example-spadescbm-in-saskatchewan.html","id":"python","chapter":"Example: spadesCBM in Saskatchewan","heading":"Python","text":"CBM_core module, simulation module spadesCBM, requires Python >=3.9 <=3.12.7.suitable version Python already exist computer,\nreticulate package used install using pyenv pyenv-win.using Windows computer Git installed, pyenv-win tool acquired managed directly reticulate. using Windows computer without Git installed, prompted allow pyenv-win tool downloaded directly Github local user application data directory (tools::R_user_dir(\"CBMutils\")).Python installation process fails prefer manually install Python, can downloaded directly python.org/downloads. calls Python functions package called libcbm. Python functions used CBM_core module. Details CBM_core module Python functions provided CBM_core chapter manual.","code":""},{"path":"example-spadescbm-in-saskatchewan.html","id":"running-the-simulation","chapter":"Example: spadesCBM in Saskatchewan","heading":"Running the simulation","text":"R script run simulation forest carbon dynamics managed forests SK 1985 2011, disturbances presented Boisvenue et al. (2016). Depending computing capacity, may take , particularly first time run . Subsequent simulations much faster use reproducible::Cache function.simulation period can changed shorter, disturbances raster provided years within 1985-2011 range example.","code":"# set project paths and install packages\nprojectPath <- \"~/GitHub/spadesCBM\"\nrepos <- unique(c(\"predictiveecology.r-universe.dev\", getOption(\"repos\")))\ninstall.packages(\"SpaDES.project\",\n                 repos = repos)\n\n# Set simulation period.In this example we start in 1985, and end in 2011\ntimes <- list(start = 1985, end = 2011)\n\n# This is our setupProject call. This creates the model's folder structure, downloads modules, installs and loads needed packages, and sets options.\nout <- SpaDES.project::setupProject(\n  Restart = TRUE,\n  useGit = \"PredictiveEcology\", # a developer sets and keeps this = TRUE\n  overwrite = TRUE, # a user who wants to get latest modules sets this to TRUE\n  paths = list(projectPath = projectPath),\n\n  options = options(\n    repos = c(repos = repos),\n    Require.cloneFrom = Sys.getenv(\"R_LIBS_USER\"),\n    reproducible.destinationPath = \"inputs\",\n    ## These are for speed\n    reproducible.useMemoise = TRUE,\n    # Require.offlineMode = TRUE,\n    spades.moduleCodeChecks = FALSE\n  ),\n  modules =  c(\"PredictiveEcology/CBM_defaults@main\",\n               \"PredictiveEcology/CBM_dataPrep_SK@main\",\n               \"PredictiveEcology/CBM_vol2biomass_SK@main\",\n               \"PredictiveEcology/CBM_core@main\"),\n  times = times,\n  require = c(\"reproducible\"),\n\n  params = list(\n    CBM_defaults = list(\n      .useCache = TRUE\n    ),\n    CBM_dataPrep_SK = list(\n      .useCache = TRUE\n    ),\n    CBM_vol2biomass_SK = list(\n      .useCache = TRUE\n    )\n  ),\n\n  #### begin manually passed inputs #########################################\n  ## define the  study area.\n  masterRaster = {\n    mr <- reproducible::prepInputs(url = \"https://drive.google.com/file/d/1zUyFH8k6Ef4c_GiWMInKbwAl6m6gvLJW\",\n                                   destinationPath = \"inputs\")\n    mr[mr[] == 0] <- NA\n    mr\n  },\n\n  disturbanceRastersURL = \"https://drive.google.com/file/d/12YnuQYytjcBej0_kdodLchPg7z9LygCt\",\n\n  outputs = as.data.frame(expand.grid(\n    objectName = c(\"cbmPools\", \"NPP\"),\n    saveTime = sort(c(times$start, times$start + c(1:(times$end - times$start))))\n  ))\n)\n\n# Run simulation\nsimMngedSK <- SpaDES.core::simInitAndSpades2(out)"},{"path":"example-spadescbm-in-saskatchewan.html","id":"viewing-results","chapter":"Example: spadesCBM in Saskatchewan","heading":"Viewing results","text":"simulation run, can view results. saved files outputs folder created project’s directory. kept default global script , can found : ~/GitHub/spadesCBM/outputs. able see .rds files cbmPools NPP simulated year, well various growth curve increment related figures CBM_vol2biomass_SK shown .simMngedSK object R resulting simlist simulation. CBMutils offers plotting functions help visualize basic results using simlist.","code":"# Yearly forest products and emissions for each simulation year\ncarbonPlot <- CBMutils::carbonOutPlot(\n  emissionsProducts = simMngedSK$emissionsProducts\n)# Proportions of carbon in above and below ground compartments\nbarplot <- CBMutils::barPlot(\n  cbmPools = simMngedSK$cbmPools\n)# Map of pixel-level average NPP\nNppPlot <- CBMutils::NPPplot(\n  cohortGroupKeep = simMngedSK$cohortGroupKeep,\n  NPP = simMngedSK$NPP,\n  masterRaster = simMngedSK$masterRaster\n)# Map of total carbon per pixel for a simulation year\nspatialPlot <- CBMutils::patialPlot(\n  cbmPools = simMngedSK$cbmPools,\n  years = 2000, # set simulation year \n  masterRaster = simMngedSK$masterRaster,\n  cohortGroupKeep = simMngedSK$cohortGroupKeep\n)"},{"path":"references.html","id":"references","chapter":"References","heading":"References","text":"","code":""}]
